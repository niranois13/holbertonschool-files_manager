Handling content...
Incoming content: { name: 'images', type: 'folder' }
No parentId provided, defaulting to root (0)
Invalid userId format: <ref *2> ServerResponse {
  _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
  _eventsCount: 1,
  _maxListeners: undefined,
  outputData: [],
  outputSize: 0,
  writable: true,
  destroyed: false,
  _last: false,
  chunkedEncoding: false,
  shouldKeepAlive: true,
  maxRequestsOnConnectionReached: false,
  _defaultKeepAlive: true,
  useChunkedEncodingByDefault: true,
  sendDate: true,
  _removedConnection: false,
  _removedContLen: false,
  _removedTE: false,
  strictContentLength: false,
  _contentLength: '24',
  _hasBody: true,
  _trailer: '',
  finished: true,
  _headerSent: true,
  _closed: false,
  socket: <ref *1> Socket {
    connecting: false,
    _hadError: false,
    _parent: null,
    _host: null,
    _closeAfterHandlingError: false,
    _events: {
      close: [Array],
      error: [Function: socketOnError],
      prefinish: undefined,
      finish: undefined,
      drain: [Function: bound socketOnDrain],
      data: [Function: bound socketOnData],
      end: [Array],
      readable: undefined,
      timeout: [Function: socketOnTimeout],
      resume: [Function: onSocketResume],
      pause: [Function: onSocketPause]
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      [Symbol(kState)]: 193997060
    },
    _writableState: WritableState {
      highWaterMark: 16384,
      length: 0,
      corked: 0,
      onwrite: [Function: bound onwrite],
      writelen: 0,
      bufferedIndex: 0,
      pendingcb: 1,
      [Symbol(kState)]: 420217092,
      [Symbol(kBufferedValue)]: null,
      [Symbol(kWriteCbValue)]: null,
      [Symbol(kAfterWriteTickInfoValue)]: [Object]
    },
    allowHalfOpen: true,
    _maxListeners: undefined,
    _eventsCount: 8,
    _sockname: null,
    _pendingData: null,
    _pendingEncoding: '',
    server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::5000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 17,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 392982,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 20,
        [Symbol(triggerId)]: 18
      }
    },
    _server: Server {
      maxHeaderSize: undefined,
      insecureHTTPParser: undefined,
      requestTimeout: 300000,
      headersTimeout: 60000,
      keepAliveTimeout: 5000,
      connectionsCheckingInterval: 30000,
      requireHostHeader: true,
      joinDuplicateHeaders: undefined,
      rejectNonStandardBodyWrites: false,
      _events: [Object: null prototype],
      _eventsCount: 3,
      _maxListeners: undefined,
      _connections: 1,
      _handle: [TCP],
      _usingWorkers: false,
      _workers: [],
      _unref: false,
      _listeningId: 2,
      allowHalfOpen: true,
      pauseOnConnect: false,
      noDelay: true,
      keepAlive: false,
      keepAliveInitialDelay: 0,
      highWaterMark: 16384,
      httpAllowHalfOpen: false,
      timeout: 0,
      maxHeadersCount: null,
      maxRequestsPerSocket: 0,
      _connectionKey: '6::::5000',
      [Symbol(IncomingMessage)]: [Function: IncomingMessage],
      [Symbol(ServerResponse)]: [Function: ServerResponse],
      [Symbol(shapeMode)]: false,
      [Symbol(kCapture)]: false,
      [Symbol(async_id_symbol)]: 17,
      [Symbol(kUniqueHeaders)]: null,
      [Symbol(http.server.connections)]: ConnectionsList {},
      [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
        _idleTimeout: 30000,
        _idlePrev: [TimersList],
        _idleNext: [TimersList],
        _idleStart: 392982,
        _onTimeout: [Function: bound checkConnections],
        _timerArgs: undefined,
        _repeat: 30000,
        _destroyed: false,
        [Symbol(refed)]: false,
        [Symbol(kHasPrimitive)]: false,
        [Symbol(asyncId)]: 20,
        [Symbol(triggerId)]: 18
      }
    },
    parser: HTTPParser {
      '0': null,
      '1': [Function: parserOnHeaders],
      '2': [Function: parserOnHeadersComplete],
      '3': [Function: parserOnBody],
      '4': [Function: parserOnMessageComplete],
      '5': [Function: bound onParserExecute],
      '6': [Function: bound onParserTimeout],
      _headers: [],
      _url: '',
      socket: [Circular *1],
      incoming: [IncomingMessage],
      outgoing: null,
      maxHeaderPairs: 2000,
      _consumed: true,
      onIncoming: [Function: bound parserOnIncoming],
      joinDuplicateHeaders: null,
      [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
    },
    on: [Function: socketListenerWrap],
    addListener: [Function: socketListenerWrap],
    prependListener: [Function: socketListenerWrap],
    setEncoding: [Function: socketSetEncoding],
    _paused: false,
    _httpMessage: [Circular *2],
    [Symbol(async_id_symbol)]: 349,
    [Symbol(kHandle)]: TCP {
      reading: true,
      onconnection: null,
      _consumed: true,
      [Symbol(owner_symbol)]: [Circular *1]
    },
    [Symbol(lastWriteQueueSize)]: 0,
    [Symbol(timeout)]: null,
    [Symbol(kBuffer)]: null,
    [Symbol(kBufferCb)]: null,
    [Symbol(kBufferGen)]: null,
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false,
    [Symbol(kSetNoDelay)]: true,
    [Symbol(kSetKeepAlive)]: false,
    [Symbol(kSetKeepAliveInitialDelay)]: 0,
    [Symbol(kBytesRead)]: 0,
    [Symbol(kBytesWritten)]: 0
  },
  _header: 'HTTP/1.1 401 Unauthorized\r\n' +
    'X-Powered-By: Express\r\n' +
    'Content-Type: application/json; charset=utf-8\r\n' +
    'Content-Length: 24\r\n' +
    'ETag: W/"18-XPDV80vbMk4yY1/PADG4jYM4rSI"\r\n' +
    'Date: Sun, 06 Apr 2025 14:23:55 GMT\r\n' +
    'Connection: keep-alive\r\n' +
    'Keep-Alive: timeout=5\r\n' +
    '\r\n',
  _keepAliveTimeout: 5000,
  _onPendingData: [Function: bound updateOutgoingData],
  req: IncomingMessage {
    _events: {
      close: undefined,
      error: undefined,
      data: undefined,
      end: undefined,
      readable: undefined,
      aborted: undefined
    },
    _readableState: ReadableState {
      highWaterMark: 16384,
      buffer: [],
      bufferIndex: 0,
      length: 0,
      pipes: [],
      awaitDrainWriters: null,
      [Symbol(kState)]: 60295036
    },
    _maxListeners: undefined,
    socket: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *2],
      [Symbol(async_id_symbol)]: 349,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    httpVersionMajor: 1,
    httpVersionMinor: 1,
    httpVersion: '1.1',
    complete: true,
    rawHeaders: [
      'Host',
      '0.0.0.0:5000',
      'User-Agent',
      'curl/7.81.0',
      'Accept',
      '*/*',
      'X-Token',
      '643b0e56-6ac0-43a0-8626-d1b1ff7c5',
      'Content-Type',
      'application/json',
      'Content-Length',
      '38'
    ],
    rawTrailers: [],
    joinDuplicateHeaders: null,
    aborted: false,
    upgrade: false,
    url: '/files',
    method: 'POST',
    statusCode: null,
    statusMessage: null,
    client: <ref *1> Socket {
      connecting: false,
      _hadError: false,
      _parent: null,
      _host: null,
      _closeAfterHandlingError: false,
      _events: [Object],
      _readableState: [ReadableState],
      _writableState: [WritableState],
      allowHalfOpen: true,
      _maxListeners: undefined,
      _eventsCount: 8,
      _sockname: null,
      _pendingData: null,
      _pendingEncoding: '',
      server: [Server],
      _server: [Server],
      parser: [HTTPParser],
      on: [Function: socketListenerWrap],
      addListener: [Function: socketListenerWrap],
      prependListener: [Function: socketListenerWrap],
      setEncoding: [Function: socketSetEncoding],
      _paused: false,
      _httpMessage: [Circular *2],
      [Symbol(async_id_symbol)]: 349,
      [Symbol(kHandle)]: [TCP],
      [Symbol(lastWriteQueueSize)]: 0,
      [Symbol(timeout)]: null,
      [Symbol(kBuffer)]: null,
      [Symbol(kBufferCb)]: null,
      [Symbol(kBufferGen)]: null,
      [Symbol(shapeMode)]: true,
      [Symbol(kCapture)]: false,
      [Symbol(kSetNoDelay)]: true,
      [Symbol(kSetKeepAlive)]: false,
      [Symbol(kSetKeepAliveInitialDelay)]: 0,
      [Symbol(kBytesRead)]: 0,
      [Symbol(kBytesWritten)]: 0
    },
    _consuming: true,
    _dumped: false,
    next: [Function: next],
    baseUrl: '',
    originalUrl: '/files',
    _parsedUrl: Url {
      protocol: null,
      slashes: null,
      auth: null,
      host: null,
      port: null,
      hostname: null,
      hash: null,
      search: null,
      query: null,
      pathname: '/files',
      path: '/files',
      href: '/files',
      _raw: '/files'
    },
    params: {},
    query: {},
    res: [Circular *2],
    body: { name: 'images', type: 'folder', parentId: '0', isPublic: false },
    _body: true,
    length: undefined,
    _eventsCount: 0,
    route: Route { path: '/files', stack: [Array], methods: [Object] },
    [Symbol(shapeMode)]: true,
    [Symbol(kCapture)]: false,
    [Symbol(kHeaders)]: {
      host: '0.0.0.0:5000',
      'user-agent': 'curl/7.81.0',
      accept: '*/*',
      'x-token': '643b0e56-6ac0-43a0-8626-d1b1ff7c5',
      'content-type': 'application/json',
      'content-length': '38'
    },
    [Symbol(kHeadersCount)]: 12,
    [Symbol(kTrailers)]: null,
    [Symbol(kTrailersCount)]: 0
  },
  _sent100: false,
  _expect_continue: false,
  _maxRequestsPerSocket: 0,
  locals: [Object: null prototype] {},
  statusCode: 401,
  statusMessage: 'Unauthorized',
  [Symbol(shapeMode)]: false,
  [Symbol(kCapture)]: false,
  [Symbol(kBytesWritten)]: 0,
  [Symbol(kNeedDrain)]: false,
  [Symbol(corked)]: 0,
  [Symbol(kOutHeaders)]: [Object: null prototype] {
    'x-powered-by': [ 'X-Powered-By', 'Express' ],
    'content-type': [ 'Content-Type', 'application/json; charset=utf-8' ],
    'content-length': [ 'Content-Length', '24' ],
    etag: [ 'ETag', 'W/"18-XPDV80vbMk4yY1/PADG4jYM4rSI"' ]
  },
  [Symbol(errored)]: null,
  [Symbol(kHighWaterMark)]: 16384,
  [Symbol(kRejectNonStandardBodyWrites)]: false,
  [Symbol(kUniqueHeaders)]: null
}
Error in postUpload: Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:659:11)
    at ServerResponse.header (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:794:10)
    at ServerResponse.send (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:174:12)
    at ServerResponse.json (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:278:15)
    at call (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:97:32)
    at tryCatch (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at Generator._invoke (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at Generator.next (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at asyncGeneratorStep (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at _next (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  code: 'ERR_HTTP_HEADERS_SENT'
}
Unhandled Rejection at: Promise {
  <rejected> Error: Cannot set headers after they are sent to the client
      at ServerResponse.setHeader (node:_http_outgoing:659:11)
      at ServerResponse.header (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:794:10)
      at ServerResponse.send (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:174:12)
      at ServerResponse.json (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:278:15)
      at call (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:155:30)
      at tryCatch (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
      at Generator._invoke (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
      at Generator.next (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
      at asyncGeneratorStep (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
      at _next (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
      at processTicksAndRejections (node:internal/process/task_queues:95:5) {
    code: 'ERR_HTTP_HEADERS_SENT'
  }
} reason: Error: Cannot set headers after they are sent to the client
    at ServerResponse.setHeader (node:_http_outgoing:659:11)
    at ServerResponse.header (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:794:10)
    at ServerResponse.send (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:174:12)
    at ServerResponse.json (/home/nrni/Holbertonschool/holbertonschool-files_manager/node_modules/express/lib/response.js:278:15)
    at call (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:155:30)
    at tryCatch (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at Generator._invoke (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at Generator.next (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at asyncGeneratorStep (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at _next (/home/nrni/Holbertonschool/holbertonschool-files_manager/controllers/FilesController.js:2:1)
    at processTicksAndRejections (node:internal/process/task_queues:95:5) {
  code: 'ERR_HTTP_HEADERS_SENT'
}